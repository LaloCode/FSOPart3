{"version":3,"sources":["components/SuccessMessage.js","components/ErrorMessage.js","components/Person.js","components/Persons.js","components/Filter.js","components/PersonForm.js","services/Phones.js","App.js","index.js"],"names":["SuccessMessage","message","className","ErrorMessage","Person","person","filter","handleDelete","name","toLowerCase","includes","number","onClick","Persons","persons","map","i","key","Filter","props","value","onChange","handleFilterOnChange","PersonForm","onSubmit","addPerson","newName","handlePersonOnChange","newNumber","handleNumberOnChange","type","axios","get","then","response","data","newObject","post","id","url","delete","put","App","useState","setPersons","setNewName","setNewNumber","setFilter","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","phoneService","initialNotes","event","target","preventDefault","personObject","some","window","confirm","find","p","newPerson","returnedPerson","setTimeout","catch","error","concat","elementToDelete","reduce","result","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ad3ba10.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst SuccessMessage = ({message}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"success\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuccessMessage","import React from 'react'\r\n\r\nconst ErrorMessage = ({message}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import React from 'react'\r\n\r\nconst Person = ({person, filter, handleDelete}) => {\r\n    if (person.name.toLowerCase().includes(filter.toLowerCase())) {\r\n        return <div>{person.name} {person.number} <button onClick={() => {\r\n            handleDelete(person.name)\r\n        }}> delete </button></div>\r\n    }\r\n    return null\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({persons, filter, handleDelete}) => (\r\n    <div>\r\n        {persons.map((person, i) => \r\n            <Person key={i} person={person} filter={filter} handleDelete={handleDelete}/>\r\n        )}\r\n    </div>\r\n)\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = (props) => (\r\n    <div>\r\n        filter shown with <input value={props.filter} onChange={props.handleFilterOnChange}/>\r\n    </div>\r\n)\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => (\r\n    <form onSubmit={props.addPerson}>\r\n        <div>\r\n          name: <input value={props.newName} onChange={props.handlePersonOnChange}/>\r\n        </div>\r\n        <div>\r\n          number: <input value={props.newNumber} onChange={props.handleNumberOnChange}/>\r\n        </div>\r\n        <button type=\"submit\">add</button>\r\n    </form>\r\n)\r\n\r\nexport default PersonForm ","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst erase = id => {\r\n    const url = `http://localhost:3001/persons/${id}`\r\n    const request = axios.delete(url)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n} \r\n\r\nexport default {getAll, create, erase, update}","import React, { useState, useEffect } from 'react'\r\nimport SuccessMessage from './components/SuccessMessage'\r\nimport ErrorMessage from './components/ErrorMessage'\r\nimport Persons from './components/Persons'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport phoneService from './services/Phones'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filter, setFilter ] = useState('')\r\n  const [ successMessage, setSuccessMessage ] = useState(null)\r\n  const [ errorMessage, setErrorMessage ] = useState(null)\r\n\r\n  useEffect(() => {\r\n    phoneService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setPersons(initialNotes)\r\n      })\r\n  },[])\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const personObject = {\r\n        name: newName,\r\n        number: newNumber,\r\n    }\r\n\r\n    if (persons.some((person) => person.name === newName)) {\r\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n        const person = persons.find(p => p.name === newName)\r\n        const newPerson = {...person, number: newNumber}\r\n\r\n        phoneService\r\n          .update(newPerson.id, newPerson)\r\n          .then(returnedPerson => {\r\n            setPersons(persons.map(person => person.id !== newPerson.id ? person : returnedPerson))\r\n            setSuccessMessage(`Updated ${returnedPerson.name}`)\r\n            setTimeout(() => {\r\n              setSuccessMessage(null)\r\n            }, 5000)\r\n          })\r\n          .catch(error => {\r\n            setErrorMessage(`Information of ${newName} has already been removed from server`)\r\n            setTimeout(() => {\r\n              setErrorMessage(null)\r\n            }, 5000)\r\n          })\r\n      }\r\n    } else {\r\n        phoneService\r\n          .create(personObject)\r\n          .then(returnedPerson => {\r\n            setPersons(persons.concat(returnedPerson))\r\n            setNewName('')\r\n            setNewNumber('')\r\n            setSuccessMessage(`Added ${returnedPerson.name}`)\r\n            setTimeout(() => {\r\n              setSuccessMessage(null)\r\n            }, 5000)\r\n          })\r\n    }\r\n  }\r\n\r\n  const handlePersonOnChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberOnChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterOnChange = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const handleDelete = (name) => {\r\n    if (window.confirm(`Delete ${name}?`)) {\r\n      const elementToDelete = persons.find(person => {\r\n        return person.name === name\r\n      })\r\n  \r\n      phoneService\r\n        .erase(elementToDelete.id)\r\n  \r\n      setPersons(persons.reduce((result, person) => {\r\n        if (person.name !== elementToDelete.name) {\r\n          result.push(person)\r\n        }\r\n        return result\r\n      }, []))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      <SuccessMessage message={successMessage} />\r\n\r\n      <ErrorMessage message={errorMessage} />\r\n\r\n      <Filter filter={filter} handleFilterOnChange={handleFilterOnChange}/>\r\n\r\n      <h2>add a new</h2>\r\n\r\n      <PersonForm addPerson={addPerson} newName={newName} handlePersonOnChange={handlePersonOnChange} newNumber={newNumber} handleNumberOnChange={handleNumberOnChange}/>\r\n\r\n      <h2>Numbers</h2>\r\n\r\n      <Persons persons={persons} filter={filter} handleDelete={handleDelete}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}